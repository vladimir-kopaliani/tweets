package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.25

import (
	"context"

	"github.com/vladimir-kopaliani/tweets/tweet_service/internal/entities"
)

// CreateTweet is the resolver for the createTweet field.
func (r *mutationResolver) CreateTweet(ctx context.Context, input entities.CreateTweetInput) (*entities.Tweet, error) {
	return r.Service.CreateNewTweet(ctx, &entities.Tweet{
		Message: input.Message,
	})
}

// DeleteTweet is the resolver for the deleteTweet field.
func (r *mutationResolver) DeleteTweet(ctx context.Context, input entities.DeleteTweetInput) (*entities.Result, error) {
	err := r.Service.DeleteTweetByID(ctx, input.ID)
	if err != nil {
		return nil, err
	}

	return &entities.Result{Success: true}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
